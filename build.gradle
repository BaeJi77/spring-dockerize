plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.dockerize.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    layered()
}

bootBuildImage {
    imageName = "spring-boot-dockerized:${project.version}"
}

task buildDockerImage {
    dependsOn 'bootBuildImage'

    println "projectVersion = ${project.version}"
}

ext {
    buildVersion = project.hasProperty("buildVersion") ? project.getProperty("buildVersion") : "${project.version}"
    containerProjectName = 'spring-boot-dockerized'
    dockerImageName = "${containerProjectName}:${buildVersion}"
    harborRepository = "HARBOR_URL/${dockerImageName}"
}

task buildHarborImage {
    dependsOn 'bootBuildImage'

    println("buildVersion = ${buildVersion}")
    println("dockerImageName = ${dockerImageName}")
    println("harborRepository = ${harborRepository}")

    doLast {
        exec {
            commandLine "docker", "tag", "${dockerImageName}", "${harborRepository}"
        }
        exec {
            commandLine "docker", "push", "${harborRepository}"
        }
        println("harbor push done!")
    }

}
